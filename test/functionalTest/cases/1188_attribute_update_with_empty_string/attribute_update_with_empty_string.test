# Copyright 2015 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Update Attribute With Empty String

----SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

#
# 01. Create E1 with attr1 with value = ''
# 02. Get E1 to see empty attr1
# 03. Update E1/attr1 with value = 3
# 04. Get E1 to see attr1 == 3
# 05. Update E1/attr1 with value = ''
# 06. Get E1 to see empty attr1
# 07. Update E1/attr1 with value = 7
# 08. Get E1 to see attr1 == 7
#

echo "01. Create E1 with attr1 with value = ''"
echo "========================================"
payload='{ "id": "E1", "type": "T1", "attr1": "" }'
orionCurl --url /v2/entities --payload "$payload" --json
echo
echo


echo "02. Get E1 to see empty attr1"
echo "============================="
orionCurl --url /v2/entities/E1 --json
echo
echo


echo "03. Update E1/attr1 with value = 3"
echo "=================================="
payload='{ "attr1": 3 }'
orionCurl --url /v2/entities/E1 --payload "$payload" --json
echo
echo


echo "04. Get E1 to see attr1 == 3"
echo "============================"
orionCurl --url /v2/entities/E1 --json
echo
echo


echo "05. Update E1/attr1 with value = ''"
echo "==================================="
payload='{ "attr1": "" }'
orionCurl --url /v2/entities/E1 --payload "$payload" --json
echo
echo


echo "06. Get E1 to see empty attr1"
echo "============================="
orionCurl --url /v2/entities/E1 --json
echo
echo


echo "07. Update E1/attr1 with value = 7"
echo "==================================="
payload='{ "attr1": 7 }'
orionCurl --url /v2/entities/E1 --payload "$payload" --json
echo
echo


echo "08. Get E1 to see attr1 == 7"
echo "============================"
orionCurl --url /v2/entities/E1 --json
echo
echo


--REGEXPECT--
01. Create E1 with attr1 with value = ''
========================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E1
Date: REGEX(.*)



02. Get E1 to see empty attr1
=============================
HTTP/1.1 200 OK
Content-Length: 34
Content-Type: application/json
Date: REGEX(.*)

{
    "attr1": "",
    "id": "E1",
    "type": "T1"
}


03. Update E1/attr1 with value = 3
==================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E1
Date: REGEX(.*)



04. Get E1 to see attr1 == 3
============================
HTTP/1.1 200 OK
Content-Length: 40
Content-Type: application/json
Date: REGEX(.*)

{
    "attr1": 3.0,
    "id": "E1",
    "type": "T1"
}


05. Update E1/attr1 with value = ''
===================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E1
Date: REGEX(.*)



06. Get E1 to see empty attr1
=============================
HTTP/1.1 200 OK
Content-Length: 34
Content-Type: application/json
Date: REGEX(.*)

{
    "attr1": "",
    "id": "E1",
    "type": "T1"
}


07. Update E1/attr1 with value = 7
===================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E1
Date: REGEX(.*)



08. Get E1 to see attr1 == 7
============================
HTTP/1.1 200 OK
Content-Length: 40
Content-Type: application/json
Date: REGEX(.*)

{
    "attr1": 7.0,
    "id": "E1",
    "type": "T1"
}


--TEARDOWN--
brokerStop CB
dbDrop CB


# Copyright 2015 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Attribute metadata update

--SHELL-INIT--
dbInit CB
brokerStart CB

--SHELL--

#
# 01. Create Room1, temp=20 with metadata max=50
# 02. Update attribute 'temperature', without value and with metadata max=25
# 03. GET /v2/entities/Room1 - temperature::value MUST be 20
#

echo "01. Create Room1, temp=20 with metadata max=50"
echo "=============================================="
payload='{
  "contextElements": [
  {
    "type": "Room",
    "isPattern": "false",
    "id": "Room1",
    "attributes": [
    {
      "name": "temperature",
      "type": "float",
      "value": "20",
      "metadatas": [
      {
        "name": "max",
        "type": "double",
        "value": "50"
      }
      ]
    }
  ]
  }
],
"updateAction": "APPEND"
}'
orionCurl --url /v1/updateContext --payload "$payload" --json
echo
echo


echo "02. Update attribute 'temperature', without value and with metadata max=25"
echo "=========================================================================="
payload='{
"contextElements": [
    {
        "type": "Room",
        "isPattern": "false",
        "id": "Room1",
        "attributes": [
        {
            "name": "temperature",
            "type": "float",
            "metadatas": [
            {
                    "name": "max",
                    "type": "double",
                    "value": "25"
            }
            ]
        }
        ]
    }
],
"updateAction": "UPDATE"
}'
orionCurl --url /v1/updateContext --payload "$payload" --json
echo
echo


echo "03. GET /v2/entities/Room1 - temperature::value MUST be 20"
echo "=========================================================="
orionCurl --url /v2/entities/Room1 --json
echo
echo


--REGEXPECT--
01. Create Room1, temp=20 with metadata max=50
==============================================
HTTP/1.1 200 OK
Content-Length: 569
Content-Type: application/json
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "metadatas": [
                            {
                                "name": "max",
                                "type": "double",
                                "value": "50"
                            }
                        ],
                        "name": "temperature",
                        "type": "float",
                        "value": ""
                    }
                ],
                "id": "Room1",
                "isPattern": "false",
                "type": "Room"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


02. Update attribute 'temperature', without value and with metadata max=25
==========================================================================
HTTP/1.1 200 OK
Content-Length: 569
Content-Type: application/json
Date: REGEX(.*)

{
    "contextResponses": [
        {
            "contextElement": {
                "attributes": [
                    {
                        "metadatas": [
                            {
                                "name": "max",
                                "type": "double",
                                "value": "25"
                            }
                        ],
                        "name": "temperature",
                        "type": "float",
                        "value": ""
                    }
                ],
                "id": "Room1",
                "isPattern": "false",
                "type": "Room"
            },
            "statusCode": {
                "code": "200",
                "reasonPhrase": "OK"
            }
        }
    ]
}


03. GET /v2/entities/Room1 - temperature::value MUST be 20
==========================================================
HTTP/1.1 200 OK
Content-Length: 109
Content-Type: application/json
Date: REGEX(.*)

{
    "id": "Room1",
    "temperature": {
        "max": {
            "type": "double",
            "value": "25"
        },
        "type": "float",
        "value": "20"
    },
    "type": "Room"
}


--TEARDOWN--
brokerStop CB
dbDrop CB
